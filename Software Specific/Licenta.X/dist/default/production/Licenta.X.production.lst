

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 11 21:49:30 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     000E                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0014                     	;# 
   312     0015                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0017                     	;# 
   316     0018                     	;# 
   317     0019                     	;# 
   318     001A                     	;# 
   319     001B                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001D                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     0081                     	;# 
   326     0085                     	;# 
   327     0086                     	;# 
   328     0087                     	;# 
   329     0088                     	;# 
   330     0089                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0095                     	;# 
   343     0096                     	;# 
   344     0097                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009A                     	;# 
   348     009B                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     0105                     	;# 
   354     0107                     	;# 
   355     0108                     	;# 
   356     0109                     	;# 
   357     010C                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0185                     	;# 
   363     0187                     	;# 
   364     0188                     	;# 
   365     0189                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368                           
   369                           	psect	idataCOMMON
   370     0128                     __pidataCOMMON:
   371                           
   372                           ;initializer for _motorFault
   373     0128  3401               	retlw	1
   374     001A                     _RCREG	set	26
   375     001F                     _ADCON0	set	31
   376     0042                     _RD2	set	66
   377     0043                     _RD3	set	67
   378     0040                     _RD0	set	64
   379     0041                     _RD1	set	65
   380     00C4                     _CREN	set	196
   381     005F                     _GIE	set	95
   382     005E                     _PEIE	set	94
   383     00C7                     _SPEN	set	199
   384     0065                     _RCIF	set	101
   385     003C                     _RC4	set	60
   386     0030                     _RB0	set	48
   387     0099                     _SPBRG	set	153
   388     009F                     _ADCON1	set	159
   389     0088                     _TRISD	set	136
   390     0087                     _TRISC	set	135
   391     0086                     _TRISB	set	134
   392     0085                     _TRISA	set	133
   393     0465                     _RCIE	set	1125
   394     04C4                     _SYNC	set	1220
   395     04C2                     _BRGH	set	1218
   396     0189                     _ANSELH	set	393
   397     0188                     _ANSEL	set	392
   398                           
   399                           	psect	cinit
   400     0011                     start_initialization:	
   401                           ; #config settings
   402                           
   403     0011                     __initialization:
   404                           
   405                           ; Initialize objects allocated to COMMON
   406     0011  120A  118A  2128  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   407     0016  00FA               	movwf	__pdataCOMMON& (0+127)
   408                           
   409                           ; Clear objects allocated to COMMON
   410     0017  01F9               	clrf	__pbssCOMMON& (0+127)
   411     0018                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414     0018                     __end_of__initialization:
   415     0018  0183               	clrf	3
   416     0019  120A  118A  28D4   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMMON
   419     0079                     __pbssCOMMON:
   420     0079                     _com_buffer:
   421     0079                     	ds	1
   422                           
   423                           	psect	dataCOMMON
   424     007A                     __pdataCOMMON:
   425     007A                     _motorFault:
   426     007A                     	ds	1
   427                           
   428                           	psect	cstackCOMMON
   429     0070                     __pcstackCOMMON:
   430     0070                     ?_project_init:
   431     0070                     ?_motor_init:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ?_UART_init:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?_motor_command:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ??_motor_command:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0070                     ?_ISR_treatment:	
   447                           ; 1 bytes @ 0x0
   448                           
   449                           
   450                           ; 1 bytes @ 0x0
   451     0070                     	ds	2
   452     0072                     motor_command@command:
   453                           
   454                           ; 1 bytes @ 0x2
   455     0072                     	ds	1
   456     0073                     motor_command@return_value:
   457                           
   458                           ; 1 bytes @ 0x3
   459     0073                     	ds	1
   460     0074                     ??_ISR_treatment:
   461                           
   462                           ; 1 bytes @ 0x4
   463     0074                     	ds	5
   464                           
   465                           	psect	cstackBANK0
   466     0020                     __pcstackBANK0:
   467     0020                     ??_project_init:
   468     0020                     ??_motor_init:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0020                     ??_UART_init:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0020                     ??_main:	
   475                           ; 1 bytes @ 0x0
   476                           
   477                           
   478                           ; 1 bytes @ 0x0
   479     0020                     	ds	3
   480                           
   481                           	psect	maintext
   482     00D4                     __pmaintext:	
   483 ;;
   484 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   485 ;;
   486 ;; *************** function _main *****************
   487 ;; Defined at:
   488 ;;		line 22 in file "MainMgr.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, status,2, status,0, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : B00/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          0       3       0       0       0
   505 ;;      Totals:         0       3       0       0       0
   506 ;;Total ram usage:        3 bytes
   507 ;; Hardware stack levels required when called: 3
   508 ;; This function calls:
   509 ;;		_UART_init
   510 ;;		_motor_init
   511 ;;		_project_init
   512 ;; This function is called by:
   513 ;;		Startup code after reset
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517     00D4                     _main:	
   518                           ;psect for function _main
   519                           
   520     00D4                     l849:	
   521                           ;incstack = 0
   522                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   523                           
   524                           
   525                           ;MainMgr.c: 23:     project_init();
   526     00D4  120A  118A  20FA  120A  118A  	fcall	_project_init
   527     00D9                     l851:
   528                           
   529                           ;MainMgr.c: 24:     motor_init();
   530     00D9  120A  118A  2121  120A  118A  	fcall	_motor_init
   531     00DE                     l853:
   532                           
   533                           ;MainMgr.c: 25:     UART_init();
   534     00DE  120A  118A  210F  120A  118A  	fcall	_UART_init
   535     00E3                     l855:
   536                           
   537                           ;MainMgr.c: 26:     _delay((unsigned long)((100)*(8000000/4000.0)));
   538     00E3  3002               	movlw	2
   539     00E4  1283               	bcf	3,5	;RP0=0, select bank0
   540     00E5  1303               	bcf	3,6	;RP1=0, select bank0
   541     00E6  00A2               	movwf	??_main+2
   542     00E7  3004               	movlw	4
   543     00E8  00A1               	movwf	??_main+1
   544     00E9  30B9               	movlw	185
   545     00EA  00A0               	movwf	??_main
   546     00EB                     u27:
   547     00EB  0BA0               	decfsz	??_main,f
   548     00EC  28EB               	goto	u27
   549     00ED  0BA1               	decfsz	??_main+1,f
   550     00EE  28EB               	goto	u27
   551     00EF  0BA2               	decfsz	??_main+2,f
   552     00F0  28EB               	goto	u27
   553     00F1  28F2               	nop2
   554     00F2                     l857:
   555                           
   556                           ;MainMgr.c: 29:     RB0 = 0;
   557     00F2  1283               	bcf	3,5	;RP0=0, select bank0
   558     00F3  1303               	bcf	3,6	;RP1=0, select bank0
   559     00F4  1006               	bcf	6,0	;volatile
   560     00F5                     l859:
   561                           
   562                           ;MainMgr.c: 30:     RC4 = 1;
   563     00F5  1607               	bsf	7,4	;volatile
   564     00F6                     l43:	
   565                           ;MainMgr.c: 32:     while(1)
   566                           
   567     00F6                     l44:	
   568                           ;MainMgr.c: 33:     {;MainMgr.c: 35:     }
   569                           
   570     00F6  28F6               	goto	l43
   571     00F7  120A  118A  280E   	ljmp	start
   572     00FA                     __end_of_main:
   573                           
   574                           	psect	text1
   575     00FA                     __ptext1:	
   576 ;; *************** function _project_init *****************
   577 ;; Defined at:
   578 ;;		line 40 in file "MainMgr.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 2
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606     00FA                     _project_init:	
   607                           ;psect for function _project_init
   608                           
   609     00FA                     l821:	
   610                           ;incstack = 0
   611                           ; Regs used in _project_init: [wreg+status,2]
   612                           
   613                           
   614                           ;MainMgr.c: 44:     TRISA = 0x00;
   615     00FA  1683               	bsf	3,5	;RP0=1, select bank1
   616     00FB  1303               	bcf	3,6	;RP1=0, select bank1
   617     00FC  0185               	clrf	5	;volatile
   618     00FD                     l823:
   619                           
   620                           ;MainMgr.c: 45:     TRISB = 0x10;
   621     00FD  3010               	movlw	16
   622     00FE  0086               	movwf	6	;volatile
   623     00FF                     l825:
   624                           
   625                           ;MainMgr.c: 51:     TRISC = 0xB0;
   626     00FF  30B0               	movlw	176
   627     0100  0087               	movwf	7	;volatile
   628                           
   629                           ;MainMgr.c: 59:     TRISD = 0x00;
   630     0101  0188               	clrf	8	;volatile
   631                           
   632                           ;MainMgr.c: 68:     ANSEL = 0x00;
   633     0102  1683               	bsf	3,5	;RP0=1, select bank3
   634     0103  1703               	bsf	3,6	;RP1=1, select bank3
   635     0104  0188               	clrf	8	;volatile
   636     0105                     l827:
   637                           
   638                           ;MainMgr.c: 69:     ANSELH = 0x08;
   639     0105  3008               	movlw	8
   640     0106  0089               	movwf	9	;volatile
   641     0107                     l829:
   642                           
   643                           ;MainMgr.c: 71:     ADCON0 = 0x2D;
   644     0107  302D               	movlw	45
   645     0108  1283               	bcf	3,5	;RP0=0, select bank0
   646     0109  1303               	bcf	3,6	;RP1=0, select bank0
   647     010A  009F               	movwf	31	;volatile
   648                           
   649                           ;MainMgr.c: 76:     ADCON1 = 0x00;
   650     010B  1683               	bsf	3,5	;RP0=1, select bank1
   651     010C  1303               	bcf	3,6	;RP1=0, select bank1
   652     010D  019F               	clrf	31	;volatile
   653     010E                     l49:
   654     010E  0008               	return
   655     010F                     __end_of_project_init:
   656                           
   657                           	psect	text2
   658     0121                     __ptext2:	
   659 ;; *************** function _motor_init *****************
   660 ;; Defined at:
   661 ;;		line 13 in file "MotorMng.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		None
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used: 1
   681 ;; Hardware stack levels required when called: 2
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689     0121                     _motor_init:	
   690                           ;psect for function _motor_init
   691                           
   692     0121                     l831:	
   693                           ;incstack = 0
   694                           ; Regs used in _motor_init: []
   695                           
   696                           
   697                           ;MotorMng.c: 15:     RD1 = 0;
   698     0121  1283               	bcf	3,5	;RP0=0, select bank0
   699     0122  1303               	bcf	3,6	;RP1=0, select bank0
   700     0123  1088               	bcf	8,1	;volatile
   701                           
   702                           ;MotorMng.c: 16:     RD0 = 0;
   703     0124  1008               	bcf	8,0	;volatile
   704                           
   705                           ;MotorMng.c: 17:     RD3 = 0;
   706     0125  1188               	bcf	8,3	;volatile
   707                           
   708                           ;MotorMng.c: 18:     RD2 = 0;
   709     0126  1108               	bcf	8,2	;volatile
   710     0127                     l98:
   711     0127  0008               	return
   712     0128                     __end_of_motor_init:
   713                           
   714                           	psect	text3
   715     010F                     __ptext3:	
   716 ;; *************** function _UART_init *****************
   717 ;; Defined at:
   718 ;;		line 10 in file "BluetoothMgr.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 2
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746     010F                     _UART_init:	
   747                           ;psect for function _UART_init
   748                           
   749     010F                     l833:	
   750                           ;incstack = 0
   751                           ; Regs used in _UART_init: [wreg]
   752                           
   753                           
   754                           ;BluetoothMgr.c: 12:   BRGH = 1;
   755     010F  1683               	bsf	3,5	;RP0=1, select bank1
   756     0110  1303               	bcf	3,6	;RP1=0, select bank1
   757     0111  1518               	bsf	24,2	;volatile
   758     0112                     l835:
   759                           
   760                           ;BluetoothMgr.c: 13:   SPBRG = 0x0C;
   761     0112  300C               	movlw	12
   762     0113  0099               	movwf	25	;volatile
   763     0114                     l837:
   764                           
   765                           ;BluetoothMgr.c: 15:   SYNC = 0;
   766     0114  1218               	bcf	24,4	;volatile
   767     0115                     l839:
   768                           
   769                           ;BluetoothMgr.c: 16:   SPEN = 1;
   770     0115  1283               	bcf	3,5	;RP0=0, select bank0
   771     0116  1303               	bcf	3,6	;RP1=0, select bank0
   772     0117  1798               	bsf	24,7	;volatile
   773     0118                     l841:
   774                           
   775                           ;BluetoothMgr.c: 19:   RCIE = 1;
   776     0118  1683               	bsf	3,5	;RP0=1, select bank1
   777     0119  1303               	bcf	3,6	;RP1=0, select bank1
   778     011A  168C               	bsf	12,5	;volatile
   779     011B                     l843:
   780                           
   781                           ;BluetoothMgr.c: 20:   PEIE = 1;
   782     011B  170B               	bsf	11,6	;volatile
   783     011C                     l845:
   784                           
   785                           ;BluetoothMgr.c: 21:   GIE = 1;
   786     011C  178B               	bsf	11,7	;volatile
   787     011D                     l847:
   788                           
   789                           ;BluetoothMgr.c: 23:   CREN = 1;
   790     011D  1283               	bcf	3,5	;RP0=0, select bank0
   791     011E  1303               	bcf	3,6	;RP1=0, select bank0
   792     011F  1618               	bsf	24,4	;volatile
   793     0120                     l87:
   794     0120  0008               	return
   795     0121                     __end_of_UART_init:
   796                           
   797                           	psect	text4
   798     001C                     __ptext4:	
   799 ;; *************** function _ISR_treatment *****************
   800 ;; Defined at:
   801 ;;		line 80 in file "MainMgr.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0
   817 ;;      Temps:          5       0       0       0       0
   818 ;;      Totals:         5       0       0       0       0
   819 ;;Total ram usage:        5 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; Hardware stack levels required when called: 1
   822 ;; This function calls:
   823 ;;		_motor_command
   824 ;; This function is called by:
   825 ;;		Interrupt level 1
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829     001C                     _ISR_treatment:	
   830                           ;psect for function _ISR_treatment
   831                           
   832     001C                     i1l757:
   833                           
   834                           ;MainMgr.c: 82:     if ( RCIF == 1)
   835     001C  1283               	bcf	3,5	;RP0=0, select bank0
   836     001D  1303               	bcf	3,6	;RP1=0, select bank0
   837     001E  1E8C               	btfss	12,5	;volatile
   838     001F  2821               	goto	u1_21
   839     0020  2822               	goto	u1_20
   840     0021                     u1_21:
   841     0021  287E               	goto	i1l68
   842     0022                     u1_20:
   843     0022                     i1l759:
   844                           
   845                           ;MainMgr.c: 83:     {;MainMgr.c: 84:         com_buffer = RCREG;
   846     0022  081A               	movf	26,w	;volatile
   847     0023  00F9               	movwf	_com_buffer
   848                           
   849                           ;MainMgr.c: 86:         switch(com_buffer){
   850     0024  2856               	goto	i1l773
   851     0025                     i1l56:	
   852                           ;MainMgr.c: 87:             case 0xF9:
   853                           
   854                           
   855                           ;MainMgr.c: 88:                 RC4 = 0;
   856     0025  1207               	bcf	7,4	;volatile
   857     0026                     i1l761:
   858                           
   859                           ;MainMgr.c: 89:                 motorFault = motor_command(0x9);
   860     0026  3009               	movlw	9
   861     0027  120A  118A  2087  120A  118A  	fcall	_motor_command
   862     002C  00FA               	movwf	_motorFault
   863                           
   864                           ;MainMgr.c: 90:                 break;
   865     002D  287B               	goto	i1l67
   866     002E                     i1l58:	
   867                           ;MainMgr.c: 92:             case 0xF6:
   868                           
   869                           
   870                           ;MainMgr.c: 93:                 RC4 = 0;
   871     002E  1207               	bcf	7,4	;volatile
   872     002F                     i1l763:
   873                           
   874                           ;MainMgr.c: 94:                 motorFault = motor_command(0x6);
   875     002F  3006               	movlw	6
   876     0030  120A  118A  2087  120A  118A  	fcall	_motor_command
   877     0035  00FA               	movwf	_motorFault
   878                           
   879                           ;MainMgr.c: 95:                 break;
   880     0036  287B               	goto	i1l67
   881     0037                     i1l59:	
   882                           ;MainMgr.c: 97:             case 0xF8:
   883                           
   884                           
   885                           ;MainMgr.c: 98:                 RC4 = 0;
   886     0037  1207               	bcf	7,4	;volatile
   887     0038                     i1l765:
   888                           
   889                           ;MainMgr.c: 99:                 motorFault = motor_command(0x8);
   890     0038  3008               	movlw	8
   891     0039  120A  118A  2087  120A  118A  	fcall	_motor_command
   892     003E  00FA               	movwf	_motorFault
   893                           
   894                           ;MainMgr.c: 100:                 break;
   895     003F  287B               	goto	i1l67
   896     0040                     i1l60:	
   897                           ;MainMgr.c: 102:             case 0xF1:
   898                           
   899                           
   900                           ;MainMgr.c: 103:                 RC4 = 0;
   901     0040  1207               	bcf	7,4	;volatile
   902     0041                     i1l767:
   903                           
   904                           ;MainMgr.c: 104:                 motorFault = motor_command(0x1);
   905     0041  3001               	movlw	1
   906     0042  120A  118A  2087  120A  118A  	fcall	_motor_command
   907     0047  00FA               	movwf	_motorFault
   908                           
   909                           ;MainMgr.c: 105:                 break;
   910     0048  287B               	goto	i1l67
   911     0049                     i1l61:	
   912                           ;MainMgr.c: 107:             case 0xF0:
   913                           
   914                           
   915                           ;MainMgr.c: 108:                 RC4 = 1;
   916     0049  1607               	bsf	7,4	;volatile
   917     004A                     i1l769:
   918                           
   919                           ;MainMgr.c: 109:                 motorFault = motor_command(0x0);
   920     004A  3000               	movlw	0
   921     004B  120A  118A  2087  120A  118A  	fcall	_motor_command
   922     0050  00FA               	movwf	_motorFault
   923                           
   924                           ;MainMgr.c: 110:                 break;
   925     0051  287B               	goto	i1l67
   926     0052                     i1l62:	
   927                           ;MainMgr.c: 112:             case 0x9F:
   928                           
   929                           
   930                           ;MainMgr.c: 113:                 RB0 = 1;
   931     0052  1406               	bsf	6,0	;volatile
   932                           
   933                           ;MainMgr.c: 114:                 break;
   934     0053  287B               	goto	i1l67
   935     0054                     i1l63:	
   936                           ;MainMgr.c: 116:             case 0x90:
   937                           
   938                           
   939                           ;MainMgr.c: 117:                 RB0 = 0;
   940     0054  1006               	bcf	6,0	;volatile
   941                           
   942                           ;MainMgr.c: 118:                 break;
   943     0055  287B               	goto	i1l67
   944     0056                     i1l773:
   945     0056  0879               	movf	_com_buffer,w
   946     0057  00F4               	movwf	??_ISR_treatment
   947     0058  01F5               	clrf	??_ISR_treatment+1
   948                           
   949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   950                           ; Switch size 1, requested type "simple"
   951                           ; Number of cases is 1, Range of values is 0 to 0
   952                           ; switch strategies available:
   953                           ; Name         Instructions Cycles
   954                           ; simple_byte            4     3 (average)
   955                           ; direct_byte           11     8 (fixed)
   956                           ; jumptable            260     6 (fixed)
   957                           ;	Chosen strategy is simple_byte
   958     0059  0875               	movf	??_ISR_treatment+1,w
   959     005A  3A00               	xorlw	0	; case 0
   960     005B  1903               	skipnz
   961     005C  285E               	goto	i1l901
   962     005D  287B               	goto	i1l67
   963     005E                     i1l901:
   964                           
   965                           ; Switch size 1, requested type "simple"
   966                           ; Number of cases is 9, Range of values is 144 to 249
   967                           ; switch strategies available:
   968                           ; Name         Instructions Cycles
   969                           ; simple_byte           28    15 (average)
   970                           ; jumptable            263     9 (fixed)
   971                           ;	Chosen strategy is simple_byte
   972     005E  0874               	movf	??_ISR_treatment,w
   973     005F  3A90               	xorlw	144	; case 144
   974     0060  1903               	skipnz
   975     0061  2854               	goto	i1l63
   976     0062  3A06               	xorlw	6	; case 150
   977     0063  1903               	skipnz
   978     0064  287B               	goto	i1l67
   979     0065  3A0F               	xorlw	15	; case 153
   980     0066  1903               	skipnz
   981     0067  287B               	goto	i1l67
   982     0068  3A06               	xorlw	6	; case 159
   983     0069  1903               	skipnz
   984     006A  2852               	goto	i1l62
   985     006B  3A6F               	xorlw	111	; case 240
   986     006C  1903               	skipnz
   987     006D  2849               	goto	i1l61
   988     006E  3A01               	xorlw	1	; case 241
   989     006F  1903               	skipnz
   990     0070  2840               	goto	i1l60
   991     0071  3A07               	xorlw	7	; case 246
   992     0072  1903               	skipnz
   993     0073  282E               	goto	i1l58
   994     0074  3A0E               	xorlw	14	; case 248
   995     0075  1903               	skipnz
   996     0076  2837               	goto	i1l59
   997     0077  3A01               	xorlw	1	; case 249
   998     0078  1903               	skipnz
   999     0079  2825               	goto	i1l56
  1000     007A  287B               	goto	i1l67
  1001     007B                     i1l67:	
  1002                           ;MainMgr.c: 130:         {;MainMgr.c: 132:         }
  1003                           
  1004                           
  1005                           ;MainMgr.c: 133:         RCIF = 0;
  1006     007B  1283               	bcf	3,5	;RP0=0, select bank0
  1007     007C  1303               	bcf	3,6	;RP1=0, select bank0
  1008     007D  128C               	bcf	12,5	;volatile
  1009     007E                     i1l68:
  1010     007E  0878               	movf	??_ISR_treatment+4,w
  1011     007F  008A               	movwf	10
  1012     0080  0877               	movf	??_ISR_treatment+3,w
  1013     0081  0084               	movwf	4
  1014     0082  0E76               	swapf	??_ISR_treatment+2,w
  1015     0083  0083               	movwf	3
  1016     0084  0EFE               	swapf	btemp,f
  1017     0085  0E7E               	swapf	btemp,w
  1018     0086  0009               	retfie
  1019     0087                     __end_of_ISR_treatment:
  1020                           
  1021                           	psect	intentry
  1022     0004                     __pintentry:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _ISR_treatment: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1025                           
  1026     0004                     interrupt_function:
  1027     007E                     saved_w	set	btemp
  1028     0004  00FE               	movwf	btemp
  1029     0005  0E03               	swapf	3,w
  1030     0006  00F6               	movwf	??_ISR_treatment+2
  1031     0007  0804               	movf	4,w
  1032     0008  00F7               	movwf	??_ISR_treatment+3
  1033     0009  080A               	movf	10,w
  1034     000A  00F8               	movwf	??_ISR_treatment+4
  1035     000B  120A  118A  281C   	ljmp	_ISR_treatment
  1036                           
  1037                           	psect	text5
  1038     0087                     __ptext5:	
  1039 ;; *************** function _motor_command *****************
  1040 ;; Defined at:
  1041 ;;		line 21 in file "MotorMng.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  command         1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  command         1    2[COMMON] unsigned char 
  1046 ;;  return_value    1    3[COMMON] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      unsigned char 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         2       0       0       0       0
  1058 ;;      Temps:          2       0       0       0       0
  1059 ;;      Totals:         4       0       0       0       0
  1060 ;;Total ram usage:        4 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_ISR_treatment
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069     0087                     _motor_command:	
  1070                           ;psect for function _motor_command
  1071                           
  1072                           
  1073                           ;incstack = 0
  1074                           ; Regs used in _motor_command: [wreg-fsr0h+status,2+status,0]
  1075                           ;motor_command@command stored from wreg
  1076     0087  00F2               	movwf	motor_command@command
  1077     0088                     i1l729:
  1078                           
  1079                           ;MotorMng.c: 21: uint8_t motor_command(uint8_t command);MotorMng.c: 22: {;MotorMng.c: 23
      +                          :     uint8_t return_value;;MotorMng.c: 24:     switch(command)
  1080     0088  28B9               	goto	i1l735
  1081     0089                     i1l102:	
  1082                           ;MotorMng.c: 25:     {;MotorMng.c: 26:         case 0x9 :
  1083                           
  1084                           
  1085                           ;MotorMng.c: 27:             RD1 = 1;
  1086     0089  1283               	bcf	3,5	;RP0=0, select bank0
  1087     008A  1303               	bcf	3,6	;RP1=0, select bank0
  1088     008B  1488               	bsf	8,1	;volatile
  1089                           
  1090                           ;MotorMng.c: 28:             RD0 = 0;
  1091     008C  1008               	bcf	8,0	;volatile
  1092                           
  1093                           ;MotorMng.c: 29:             RD3 = 1;
  1094     008D  1588               	bsf	8,3	;volatile
  1095                           
  1096                           ;MotorMng.c: 30:             RD2 = 0;
  1097     008E  1108               	bcf	8,2	;volatile
  1098                           
  1099                           ;MotorMng.c: 31:             return_value = 1;
  1100     008F  01F3               	clrf	motor_command@return_value
  1101     0090  0AF3               	incf	motor_command@return_value,f
  1102                           
  1103                           ;MotorMng.c: 32:         break;
  1104     0091  28D2               	goto	i1l737
  1105     0092                     i1l104:	
  1106                           ;MotorMng.c: 34:         case 0x6 :
  1107                           
  1108                           
  1109                           ;MotorMng.c: 35:             RD1 = 0;
  1110     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1111     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1112     0094  1088               	bcf	8,1	;volatile
  1113                           
  1114                           ;MotorMng.c: 36:             RD0 = 1;
  1115     0095  1408               	bsf	8,0	;volatile
  1116                           
  1117                           ;MotorMng.c: 37:             RD3 = 0;
  1118     0096  1188               	bcf	8,3	;volatile
  1119                           
  1120                           ;MotorMng.c: 38:             RD2 = 1;
  1121     0097  1508               	bsf	8,2	;volatile
  1122                           
  1123                           ;MotorMng.c: 39:             return_value = 1;
  1124     0098  01F3               	clrf	motor_command@return_value
  1125     0099  0AF3               	incf	motor_command@return_value,f
  1126                           
  1127                           ;MotorMng.c: 40:         break;
  1128     009A  28D2               	goto	i1l737
  1129     009B                     i1l105:	
  1130                           ;MotorMng.c: 42:         case 0x8 :
  1131                           
  1132                           
  1133                           ;MotorMng.c: 43:             RD1 = 0;
  1134     009B  1283               	bcf	3,5	;RP0=0, select bank0
  1135     009C  1303               	bcf	3,6	;RP1=0, select bank0
  1136     009D  1088               	bcf	8,1	;volatile
  1137                           
  1138                           ;MotorMng.c: 44:             RD0 = 1;
  1139     009E  1408               	bsf	8,0	;volatile
  1140                           
  1141                           ;MotorMng.c: 45:             RD3 = 1;
  1142     009F  1588               	bsf	8,3	;volatile
  1143                           
  1144                           ;MotorMng.c: 46:             RD2 = 0;
  1145     00A0  1108               	bcf	8,2	;volatile
  1146                           
  1147                           ;MotorMng.c: 47:             return_value = 1;
  1148     00A1  01F3               	clrf	motor_command@return_value
  1149     00A2  0AF3               	incf	motor_command@return_value,f
  1150                           
  1151                           ;MotorMng.c: 48:         break;
  1152     00A3  28D2               	goto	i1l737
  1153     00A4                     i1l106:	
  1154                           ;MotorMng.c: 50:         case 0x1 :
  1155                           
  1156                           
  1157                           ;MotorMng.c: 51:             RD1 = 1;
  1158     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1159     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1160     00A6  1488               	bsf	8,1	;volatile
  1161                           
  1162                           ;MotorMng.c: 52:             RD0 = 0;
  1163     00A7  1008               	bcf	8,0	;volatile
  1164                           
  1165                           ;MotorMng.c: 53:             RD3 = 0;
  1166     00A8  1188               	bcf	8,3	;volatile
  1167                           
  1168                           ;MotorMng.c: 54:             RD2 = 1;
  1169     00A9  1508               	bsf	8,2	;volatile
  1170                           
  1171                           ;MotorMng.c: 55:             return_value = 1;
  1172     00AA  01F3               	clrf	motor_command@return_value
  1173     00AB  0AF3               	incf	motor_command@return_value,f
  1174                           
  1175                           ;MotorMng.c: 56:         break;
  1176     00AC  28D2               	goto	i1l737
  1177     00AD                     i1l107:	
  1178                           ;MotorMng.c: 58:         case 0x0:
  1179                           
  1180                           
  1181                           ;MotorMng.c: 59:             RD1 = 0;
  1182     00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1183     00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1184     00AF  1088               	bcf	8,1	;volatile
  1185                           
  1186                           ;MotorMng.c: 60:             RD0 = 0;
  1187     00B0  1008               	bcf	8,0	;volatile
  1188                           
  1189                           ;MotorMng.c: 61:             RD3 = 0;
  1190     00B1  1188               	bcf	8,3	;volatile
  1191                           
  1192                           ;MotorMng.c: 62:             RD2 = 0;
  1193     00B2  1108               	bcf	8,2	;volatile
  1194                           
  1195                           ;MotorMng.c: 63:             return_value = 1;
  1196     00B3  01F3               	clrf	motor_command@return_value
  1197     00B4  0AF3               	incf	motor_command@return_value,f
  1198                           
  1199                           ;MotorMng.c: 64:         break;
  1200     00B5  28D2               	goto	i1l737
  1201     00B6                     i1l731:
  1202                           
  1203                           ;MotorMng.c: 67:             return_value = 0xAA;
  1204     00B6  30AA               	movlw	170
  1205     00B7  00F3               	movwf	motor_command@return_value
  1206                           
  1207                           ;MotorMng.c: 68:         break;
  1208     00B8  28D2               	goto	i1l737
  1209     00B9                     i1l735:
  1210     00B9  0872               	movf	motor_command@command,w
  1211     00BA  00F0               	movwf	??_motor_command
  1212     00BB  01F1               	clrf	??_motor_command+1
  1213                           
  1214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 1, Range of values is 0 to 0
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte            4     3 (average)
  1220                           ; direct_byte           11     8 (fixed)
  1221                           ; jumptable            260     6 (fixed)
  1222                           ;	Chosen strategy is simple_byte
  1223     00BC  0871               	movf	??_motor_command+1,w
  1224     00BD  3A00               	xorlw	0	; case 0
  1225     00BE  1903               	skipnz
  1226     00BF  28C1               	goto	i1l903
  1227     00C0  28B6               	goto	i1l731
  1228     00C1                     i1l903:
  1229                           
  1230                           ; Switch size 1, requested type "simple"
  1231                           ; Number of cases is 5, Range of values is 0 to 9
  1232                           ; switch strategies available:
  1233                           ; Name         Instructions Cycles
  1234                           ; simple_byte           16     9 (average)
  1235                           ; direct_byte           38     8 (fixed)
  1236                           ; jumptable            260     6 (fixed)
  1237                           ;	Chosen strategy is simple_byte
  1238     00C1  0870               	movf	??_motor_command,w
  1239     00C2  3A00               	xorlw	0	; case 0
  1240     00C3  1903               	skipnz
  1241     00C4  28AD               	goto	i1l107
  1242     00C5  3A01               	xorlw	1	; case 1
  1243     00C6  1903               	skipnz
  1244     00C7  28A4               	goto	i1l106
  1245     00C8  3A07               	xorlw	7	; case 6
  1246     00C9  1903               	skipnz
  1247     00CA  2892               	goto	i1l104
  1248     00CB  3A0E               	xorlw	14	; case 8
  1249     00CC  1903               	skipnz
  1250     00CD  289B               	goto	i1l105
  1251     00CE  3A01               	xorlw	1	; case 9
  1252     00CF  1903               	skipnz
  1253     00D0  2889               	goto	i1l102
  1254     00D1  28B6               	goto	i1l731
  1255     00D2                     i1l737:
  1256                           
  1257                           ;MotorMng.c: 70:     return return_value;
  1258     00D2  0873               	movf	motor_command@return_value,w
  1259     00D3                     i1l109:
  1260     00D3  0008               	return
  1261     00D4                     __end_of_motor_command:
  1262     007E                     btemp	set	126	;btemp
  1263     007E                     wtemp0	set	126
  1264                           
  1265                           	psect	idloc
  1266                           
  1267                           ;Config register IDLOC0 @ 0x2000
  1268                           ;	unspecified, using default values
  1269     2000                     	org	8192
  1270     2000  3FFF               	dw	16383
  1271                           
  1272                           ;Config register IDLOC1 @ 0x2001
  1273                           ;	unspecified, using default values
  1274     2001                     	org	8193
  1275     2001  3FFF               	dw	16383
  1276                           
  1277                           ;Config register IDLOC2 @ 0x2002
  1278                           ;	unspecified, using default values
  1279     2002                     	org	8194
  1280     2002  3FFF               	dw	16383
  1281                           
  1282                           ;Config register IDLOC3 @ 0x2003
  1283                           ;	unspecified, using default values
  1284     2003                     	org	8195
  1285     2003  3FFF               	dw	16383
  1286                           
  1287                           	psect	config
  1288                           
  1289                           ;Config register CONFIG1 @ 0x2007
  1290                           ;	Oscillator Selection bits
  1291                           ;	FOSC = 0x7, unprogrammed default
  1292                           ;	Watchdog Timer Enable bit
  1293                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1294                           ;	Power-up Timer Enable bit
  1295                           ;	PWRTE = 0x1, unprogrammed default
  1296                           ;	RE3/MCLR pin function select bit
  1297                           ;	MCLRE = 0x1, unprogrammed default
  1298                           ;	Code Protection bit
  1299                           ;	CP = 0x1, unprogrammed default
  1300                           ;	Data Code Protection bit
  1301                           ;	CPD = 0x1, unprogrammed default
  1302                           ;	Brown Out Reset Selection bits
  1303                           ;	BOREN = 0x3, unprogrammed default
  1304                           ;	Internal External Switchover bit
  1305                           ;	IESO = 0x1, unprogrammed default
  1306                           ;	Fail-Safe Clock Monitor Enabled bit
  1307                           ;	FCMEN = 0x1, unprogrammed default
  1308                           ;	Low Voltage Programming Enable bit
  1309                           ;	LVP = 0x1, unprogrammed default
  1310                           ;	In-Circuit Debugger Mode bit
  1311                           ;	DEBUG = 0x1, unprogrammed default
  1312     2007                     	org	8199
  1313     2007  3FF7               	dw	16375
  1314                           
  1315                           ;Config register CONFIG2 @ 0x2008
  1316                           ;	unspecified, using default values
  1317                           ;	Brown-out Reset Selection bit
  1318                           ;	BOR4V = 0x1, unprogrammed default
  1319                           ;	Flash Program Memory Self Write Enable bits
  1320                           ;	WRT = 0x3, unprogrammed default
  1321     2008                     	org	8200
  1322     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_treatment in COMMON

    _ISR_treatment->_motor_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_treatment in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_treatment in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_treatment in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_treatment in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
                          _UART_init
                         _motor_init
                       _project_init
 ---------------------------------------------------------------------------------
 (1) _project_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_treatment                                        5     5      0      30
                                              4 COMMON     5     5      0
                      _motor_command
 ---------------------------------------------------------------------------------
 (3) _motor_command                                        4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _motor_init
   _project_init

 _ISR_treatment (ROOT)
   _motor_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       3       5        3.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 11 21:49:30 2022

                       l43 00F6                         l44 00F6                         l49 010E  
                       l87 0120                         l98 0127                         u27 00EB  
                      l821 00FA                        l831 0121                        l823 00FD  
                      l841 0118                        l833 010F                        l825 00FF  
                      l843 011B                        l835 0112                        l827 0105  
                      l851 00D9                        l845 011C                        l837 0114  
                      l829 0107                        l853 00DE                        l847 011D  
                      l839 0115                        l855 00E3                        l857 00F2  
                      l849 00D4                        l859 00F5                        _GIE 005F  
                      _RB0 0030                        _RD0 0040                        _RD1 0041  
                      _RC4 003C                        _RD2 0042                        _RD3 0043  
                      fsr0 0004                       _BRGH 04C2                       _CREN 00C4  
                     _PEIE 005E                       _RCIE 0465                       i1l60 0040  
                     _RCIF 0065                       i1l61 0049                       i1l62 0052  
                     i1l63 0054                       i1l56 0025                       i1l58 002E  
                     i1l59 0037                       i1l67 007B                       i1l68 007E  
                     _SPEN 00C7                       _SYNC 04C4                       u1_20 0022  
                     u1_21 0021                       _main 00D4                       btemp 007E  
                     start 000E                      ?_main 0070                      _ANSEL 0188  
                    i1l102 0089                      i1l104 0092                      i1l105 009B  
                    i1l106 00A4                      i1l107 00AD                      i1l109 00D3  
                    i1l731 00B6                      i1l901 005E                      i1l903 00C1  
                    i1l735 00B9                      i1l737 00D2                      i1l729 0088  
                    i1l761 0026                      i1l763 002F                      i1l765 0038  
                    i1l773 0056                      i1l757 001C                      i1l767 0041  
                    i1l759 0022                      i1l769 004A                      _RCREG 001A  
                    _SPBRG 0099                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 0011  
             __end_of_main 00FA                     ??_main 0020                     _ADCON0 001F  
                   _ADCON1 009F                     _ANSELH 0189          __end_of_UART_init 0121  
             __pdataCOMMON 007A                     saved_w 007E    __end_of__initialization 0018  
           __pcstackCOMMON 0070      __end_of_ISR_treatment 0087                 __pmaintext 00D4  
    __end_of_motor_command 00D4                 __pintentry 0004                 _com_buffer 0079  
                  __ptext1 00FA                    __ptext2 0121                    __ptext3 010F  
                  __ptext4 001C                    __ptext5 0087       end_of_initialization 0018  
               _motorFault 007A                 _motor_init 0121                  _UART_init 010F  
            ?_project_init 0070              __pidataCOMMON 0128                 ?_UART_init 0070  
      start_initialization 0011             ??_project_init 0020                ?_motor_init 0070  
              __pbssCOMMON 0079                  ___latbits 0002              __pcstackBANK0 0020  
              ??_UART_init 0020          interrupt_function 0004       __end_of_project_init 010F  
            _ISR_treatment 001C  motor_command@return_value 0073              _motor_command 0087  
           ?_ISR_treatment 0070       motor_command@command 0072             ?_motor_command 0070  
             ??_motor_init 0020                   intlevel1 0000         __end_of_motor_init 0128  
          ??_ISR_treatment 0074               _project_init 00FA            ??_motor_command 0070  
