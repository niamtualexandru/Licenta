

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 19 12:37:37 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     000E                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0014                     	;# 
   312     0015                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0017                     	;# 
   316     0018                     	;# 
   317     0019                     	;# 
   318     001A                     	;# 
   319     001B                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001D                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     0081                     	;# 
   326     0085                     	;# 
   327     0086                     	;# 
   328     0087                     	;# 
   329     0088                     	;# 
   330     0089                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0095                     	;# 
   343     0096                     	;# 
   344     0097                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009A                     	;# 
   348     009B                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     0105                     	;# 
   354     0107                     	;# 
   355     0108                     	;# 
   356     0109                     	;# 
   357     010C                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0185                     	;# 
   363     0187                     	;# 
   364     0188                     	;# 
   365     0189                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368                           
   369                           	psect	idataCOMMON
   370     015A                     __pidataCOMMON:
   371                           
   372                           ;initializer for _motorFault
   373     015A  3401               	retlw	1
   374     001A                     _RCREG	set	26
   375     001F                     _ADCON0	set	31
   376     0019                     _TXREG	set	25
   377     0043                     _RD3	set	67
   378     0040                     _RD0	set	64
   379     0041                     _RD1	set	65
   380     00C4                     _CREN	set	196
   381     00C6                     _RX9	set	198
   382     005F                     _GIE	set	95
   383     005E                     _PEIE	set	94
   384     00C7                     _SPEN	set	199
   385     0042                     _RD2	set	66
   386     0065                     _RCIF	set	101
   387     003C                     _RC4	set	60
   388     0030                     _RB0	set	48
   389     0064                     _TXIF	set	100
   390     0099                     _SPBRG	set	153
   391     009F                     _ADCON1	set	159
   392     0088                     _TRISD	set	136
   393     0087                     _TRISC	set	135
   394     0086                     _TRISB	set	134
   395     0085                     _TRISA	set	133
   396     04C5                     _TXEN	set	1221
   397     04C6                     _TX9	set	1222
   398     0464                     _TXIE	set	1124
   399     0465                     _RCIE	set	1125
   400     04C4                     _SYNC	set	1220
   401     04C2                     _BRGH	set	1218
   402     047E                     _IRCF2	set	1150
   403     047D                     _IRCF1	set	1149
   404     047C                     _IRCF0	set	1148
   405     0189                     _ANSELH	set	393
   406     0188                     _ANSEL	set	392
   407                           
   408                           	psect	cinit
   409     0011                     start_initialization:	
   410                           ; #config settings
   411                           
   412     0011                     __initialization:
   413                           
   414                           ; Initialize objects allocated to COMMON
   415     0011  120A  118A  215A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   416     0016  00FA               	movwf	__pdataCOMMON& (0+127)
   417                           
   418                           ; Clear objects allocated to COMMON
   419     0017  01F9               	clrf	__pbssCOMMON& (0+127)
   420     0018                     end_of_initialization:	
   421                           ;End of C runtime variable initialization code
   422                           
   423     0018                     __end_of__initialization:
   424     0018  0183               	clrf	3
   425     0019  120A  118A  28FB   	ljmp	_main	;jump to C main() function
   426                           
   427                           	psect	bssCOMMON
   428     0079                     __pbssCOMMON:
   429     0079                     _com_buffer:
   430     0079                     	ds	1
   431                           
   432                           	psect	dataCOMMON
   433     007A                     __pdataCOMMON:
   434     007A                     _motorFault:
   435     007A                     	ds	1
   436                           
   437                           	psect	cstackCOMMON
   438     0070                     __pcstackCOMMON:
   439     0070                     ?_project_init:
   440     0070                     ?_motor_init:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ?_UART_init:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0070                     ?_motor_command:	
   447                           ; 1 bytes @ 0x0
   448                           
   449     0070                     ??_motor_command:	
   450                           ; 1 bytes @ 0x0
   451                           
   452     0070                     ?_main:	
   453                           ; 1 bytes @ 0x0
   454                           
   455     0070                     ?_ISR_treatment:	
   456                           ; 1 bytes @ 0x0
   457                           
   458                           
   459                           ; 1 bytes @ 0x0
   460     0070                     	ds	2
   461     0072                     motor_command@command:
   462                           
   463                           ; 1 bytes @ 0x2
   464     0072                     	ds	1
   465     0073                     motor_command@return_value:
   466                           
   467                           ; 1 bytes @ 0x3
   468     0073                     	ds	1
   469     0074                     ??_ISR_treatment:
   470                           
   471                           ; 1 bytes @ 0x4
   472     0074                     	ds	5
   473                           
   474                           	psect	cstackBANK0
   475     0020                     __pcstackBANK0:
   476     0020                     ??_project_init:
   477     0020                     ??_motor_init:	
   478                           ; 1 bytes @ 0x0
   479                           
   480     0020                     ??_UART_init:	
   481                           ; 1 bytes @ 0x0
   482                           
   483     0020                     ??_main:	
   484                           ; 1 bytes @ 0x0
   485                           
   486                           
   487                           ; 1 bytes @ 0x0
   488     0020                     	ds	2
   489                           
   490                           	psect	maintext
   491     00FB                     __pmaintext:	
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 51 in file "MainMgr.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       2       0       0       0
   514 ;;      Totals:         0       2       0       0       0
   515 ;;Total ram usage:        2 bytes
   516 ;; Hardware stack levels required when called: 3
   517 ;; This function calls:
   518 ;;		_UART_init
   519 ;;		_motor_init
   520 ;;		_project_init
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526     00FB                     _main:	
   527                           ;psect for function _main
   528                           
   529     00FB                     l907:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   532                           
   533     00FB  120A  118A  2123  120A  118A  	fcall	_project_init
   534     0100                     l909:
   535     0100  301A               	movlw	26
   536     0101  1283               	bcf	3,5	;RP0=0, select bank0
   537     0102  1303               	bcf	3,6	;RP1=0, select bank0
   538     0103  00A1               	movwf	??_main+1
   539     0104  30F7               	movlw	247
   540     0105  00A0               	movwf	??_main
   541     0106                     u67:
   542     0106  0BA0               	decfsz	??_main,f
   543     0107  2906               	goto	u67
   544     0108  0BA1               	decfsz	??_main+1,f
   545     0109  2906               	goto	u67
   546     010A  290B               	nop2
   547     010B  120A  118A  2153  120A  118A  	fcall	_motor_init
   548     0110                     l911:
   549     0110  120A  118A  213B  120A  118A  	fcall	_UART_init
   550     0115                     l55:
   551     0115  1283               	bcf	3,5	;RP0=0, select bank0
   552     0116  1303               	bcf	3,6	;RP1=0, select bank0
   553     0117  1E0C               	btfss	12,4	;volatile
   554     0118  291A               	goto	u51
   555     0119  291B               	goto	u50
   556     011A                     u51:
   557     011A  2915               	goto	l55
   558     011B                     u50:
   559     011B                     l913:
   560     011B  3041               	movlw	65
   561     011C  0099               	movwf	25	;volatile
   562     011D                     l915:
   563     011D  1006               	bcf	6,0	;volatile
   564     011E                     l917:
   565     011E  1607               	bsf	7,4	;volatile
   566     011F                     l58:
   567     011F                     l59:
   568     011F  291F               	goto	l58
   569     0120  120A  118A  280E   	ljmp	start
   570     0123                     __end_of_main:
   571                           
   572                           	psect	text1
   573     0123                     __ptext1:	
   574 ;; *************** function _project_init *****************
   575 ;; Defined at:
   576 ;;		line 69 in file "MainMgr.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; Hardware stack levels required when called: 2
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604     0123                     _project_init:	
   605                           ;psect for function _project_init
   606                           
   607     0123                     l869:	
   608                           ;incstack = 0
   609                           ; Regs used in _project_init: [wreg+status,2]
   610                           
   611     0123  1683               	bsf	3,5	;RP0=1, select bank1
   612     0124  1303               	bcf	3,6	;RP1=0, select bank1
   613     0125  160F               	bsf	15,4	;volatile
   614     0126  168F               	bsf	15,5	;volatile
   615     0127  170F               	bsf	15,6	;volatile
   616     0128                     l871:
   617     0128  0185               	clrf	5	;volatile
   618     0129                     l873:
   619     0129  3010               	movlw	16
   620     012A  0086               	movwf	6	;volatile
   621     012B                     l875:
   622     012B  30A0               	movlw	160
   623     012C  0087               	movwf	7	;volatile
   624     012D  0188               	clrf	8	;volatile
   625                           
   626                           ;MainMgr.c: 100:     ANSEL = 0x00;
   627     012E  1683               	bsf	3,5	;RP0=1, select bank3
   628     012F  1703               	bsf	3,6	;RP1=1, select bank3
   629     0130  0188               	clrf	8	;volatile
   630     0131                     l877:
   631                           
   632                           ;MainMgr.c: 101:     ANSELH = 0x08;
   633     0131  3008               	movlw	8
   634     0132  0089               	movwf	9	;volatile
   635     0133                     l879:
   636                           
   637                           ;MainMgr.c: 103:     ADCON0 = 0x2D;
   638     0133  302D               	movlw	45
   639     0134  1283               	bcf	3,5	;RP0=0, select bank0
   640     0135  1303               	bcf	3,6	;RP1=0, select bank0
   641     0136  009F               	movwf	31	;volatile
   642                           
   643                           ;MainMgr.c: 108:     ADCON1 = 0x00;
   644     0137  1683               	bsf	3,5	;RP0=1, select bank1
   645     0138  1303               	bcf	3,6	;RP1=0, select bank1
   646     0139  019F               	clrf	31	;volatile
   647     013A                     l64:
   648     013A  0008               	return
   649     013B                     __end_of_project_init:
   650                           
   651                           	psect	text2
   652     0153                     __ptext2:	
   653 ;; *************** function _motor_init *****************
   654 ;; Defined at:
   655 ;;		line 13 in file "MotorMng.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		None
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0
   672 ;;      Totals:         0       0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used: 1
   675 ;; Hardware stack levels required when called: 2
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683     0153                     _motor_init:	
   684                           ;psect for function _motor_init
   685                           
   686     0153                     l881:	
   687                           ;incstack = 0
   688                           ; Regs used in _motor_init: []
   689                           
   690                           
   691                           ;MotorMng.c: 15:     RD1 = 0;
   692     0153  1283               	bcf	3,5	;RP0=0, select bank0
   693     0154  1303               	bcf	3,6	;RP1=0, select bank0
   694     0155  1088               	bcf	8,1	;volatile
   695                           
   696                           ;MotorMng.c: 16:     RD0 = 0;
   697     0156  1008               	bcf	8,0	;volatile
   698                           
   699                           ;MotorMng.c: 17:     RD3 = 0;
   700     0157  1188               	bcf	8,3	;volatile
   701                           
   702                           ;MotorMng.c: 18:     RD2 = 0;
   703     0158  1108               	bcf	8,2	;volatile
   704     0159                     l128:
   705     0159  0008               	return
   706     015A                     __end_of_motor_init:
   707                           
   708                           	psect	text3
   709     013B                     __ptext3:	
   710 ;; *************** function _UART_init *****************
   711 ;; Defined at:
   712 ;;		line 10 in file "BluetoothMgr.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 2
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740     013B                     _UART_init:	
   741                           ;psect for function _UART_init
   742                           
   743     013B                     l883:	
   744                           ;incstack = 0
   745                           ; Regs used in _UART_init: [wreg]
   746                           
   747                           
   748                           ;BluetoothMgr.c: 12:   BRGH = 1;
   749     013B  1683               	bsf	3,5	;RP0=1, select bank1
   750     013C  1303               	bcf	3,6	;RP1=0, select bank1
   751     013D  1518               	bsf	24,2	;volatile
   752     013E                     l885:
   753                           
   754                           ;BluetoothMgr.c: 13:   SPBRG = 0x33;
   755     013E  3033               	movlw	51
   756     013F  0099               	movwf	25	;volatile
   757     0140                     l887:
   758                           
   759                           ;BluetoothMgr.c: 15:   SYNC = 0;
   760     0140  1218               	bcf	24,4	;volatile
   761     0141                     l889:
   762                           
   763                           ;BluetoothMgr.c: 16:   SPEN = 1;
   764     0141  1283               	bcf	3,5	;RP0=0, select bank0
   765     0142  1303               	bcf	3,6	;RP1=0, select bank0
   766     0143  1798               	bsf	24,7	;volatile
   767     0144                     l891:
   768                           
   769                           ;BluetoothMgr.c: 19:   RCIE = 1;
   770     0144  1683               	bsf	3,5	;RP0=1, select bank1
   771     0145  1303               	bcf	3,6	;RP1=0, select bank1
   772     0146  168C               	bsf	12,5	;volatile
   773     0147                     l893:
   774                           
   775                           ;BluetoothMgr.c: 20:   TXIE = 0;
   776     0147  120C               	bcf	12,4	;volatile
   777     0148                     l895:
   778                           
   779                           ;BluetoothMgr.c: 21:   PEIE = 1;
   780     0148  170B               	bsf	11,6	;volatile
   781     0149                     l897:
   782                           
   783                           ;BluetoothMgr.c: 22:   GIE = 1;
   784     0149  178B               	bsf	11,7	;volatile
   785     014A                     l899:
   786                           
   787                           ;BluetoothMgr.c: 23:   TX9 = 0;
   788     014A  1318               	bcf	24,6	;volatile
   789     014B                     l901:
   790                           
   791                           ;BluetoothMgr.c: 24:   RX9 = 0;
   792     014B  1283               	bcf	3,5	;RP0=0, select bank0
   793     014C  1303               	bcf	3,6	;RP1=0, select bank0
   794     014D  1318               	bcf	24,6	;volatile
   795     014E                     l903:
   796                           
   797                           ;BluetoothMgr.c: 25:   CREN = 1;
   798     014E  1618               	bsf	24,4	;volatile
   799     014F                     l905:
   800                           
   801                           ;BluetoothMgr.c: 26:   TXEN = 1;
   802     014F  1683               	bsf	3,5	;RP0=1, select bank1
   803     0150  1303               	bcf	3,6	;RP1=0, select bank1
   804     0151  1698               	bsf	24,5	;volatile
   805     0152                     l117:
   806     0152  0008               	return
   807     0153                     __end_of_UART_init:
   808                           
   809                           	psect	text4
   810     001C                     __ptext4:	
   811 ;; *************** function _ISR_treatment *****************
   812 ;; Defined at:
   813 ;;		line 112 in file "MainMgr.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0
   829 ;;      Temps:          5       0       0       0       0
   830 ;;      Totals:         5       0       0       0       0
   831 ;;Total ram usage:        5 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 1
   834 ;; This function calls:
   835 ;;		_motor_command
   836 ;; This function is called by:
   837 ;;		Interrupt level 1
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841     001C                     _ISR_treatment:	
   842                           ;psect for function _ISR_treatment
   843                           
   844     001C                     i1l797:
   845                           
   846                           ;MainMgr.c: 114:     if(RCIF == 1)
   847     001C  1283               	bcf	3,5	;RP0=0, select bank0
   848     001D  1303               	bcf	3,6	;RP1=0, select bank0
   849     001E  1E8C               	btfss	12,5	;volatile
   850     001F  2821               	goto	u2_21
   851     0020  2822               	goto	u2_20
   852     0021                     u2_21:
   853     0021  28A5               	goto	i1l90
   854     0022                     u2_20:
   855     0022                     i1l799:
   856                           
   857                           ;MainMgr.c: 115:     {;MainMgr.c: 116:         com_buffer = RCREG;
   858     0022  081A               	movf	26,w	;volatile
   859     0023  00F9               	movwf	_com_buffer
   860     0024                     i1l801:
   861                           
   862                           ;MainMgr.c: 117:         RD2 = 1;
   863     0024  1508               	bsf	8,2	;volatile
   864                           
   865                           ;MainMgr.c: 118:         _delay((unsigned long)((10)*(8000000/4000.0)));
   866     0025  301A               	movlw	26
   867     0026  00F5               	movwf	??_ISR_treatment+1
   868     0027  30F8               	movlw	248
   869     0028  00F4               	movwf	??_ISR_treatment
   870     0029                     u7_27:
   871     0029  0BF4               	decfsz	??_ISR_treatment,f
   872     002A  2829               	goto	u7_27
   873     002B  0BF5               	decfsz	??_ISR_treatment+1,f
   874     002C  2829               	goto	u7_27
   875     002D  0000               	nop
   876                           
   877                           ;MainMgr.c: 119:         switch(com_buffer){
   878     002E  2877               	goto	i1l817
   879     002F                     i1l71:	
   880                           ;MainMgr.c: 120:             case 0xF9:
   881                           
   882                           
   883                           ;MainMgr.c: 121:                 RC4 = 0b0;
   884     002F  1283               	bcf	3,5	;RP0=0, select bank0
   885     0030  1303               	bcf	3,6	;RP1=0, select bank0
   886     0031  1207               	bcf	7,4	;volatile
   887     0032                     i1l803:
   888                           
   889                           ;MainMgr.c: 122:                 motorFault = motor_command(0xF);
   890     0032  300F               	movlw	15
   891     0033  120A  118A  20AE  120A  118A  	fcall	_motor_command
   892     0038  00FA               	movwf	_motorFault
   893                           
   894                           ;MainMgr.c: 123:                 break;
   895     0039  289C               	goto	i1l85
   896     003A                     i1l73:	
   897                           ;MainMgr.c: 125:             case 0xF6:
   898                           
   899                           
   900                           ;MainMgr.c: 126:                 RC4 = 0b0;
   901     003A  1283               	bcf	3,5	;RP0=0, select bank0
   902     003B  1303               	bcf	3,6	;RP1=0, select bank0
   903     003C  1207               	bcf	7,4	;volatile
   904     003D                     i1l805:
   905                           
   906                           ;MainMgr.c: 127:                 motorFault = motor_command(0x6);
   907     003D  3006               	movlw	6
   908     003E  120A  118A  20AE  120A  118A  	fcall	_motor_command
   909     0043  00FA               	movwf	_motorFault
   910                           
   911                           ;MainMgr.c: 128:                 break;
   912     0044  289C               	goto	i1l85
   913     0045                     i1l74:	
   914                           ;MainMgr.c: 130:             case 0xF8:
   915                           
   916                           
   917                           ;MainMgr.c: 131:                 RC4 = 0b0;
   918     0045  1283               	bcf	3,5	;RP0=0, select bank0
   919     0046  1303               	bcf	3,6	;RP1=0, select bank0
   920     0047  1207               	bcf	7,4	;volatile
   921     0048                     i1l807:
   922                           
   923                           ;MainMgr.c: 132:                 motorFault = motor_command(0x8);
   924     0048  3008               	movlw	8
   925     0049  120A  118A  20AE  120A  118A  	fcall	_motor_command
   926     004E  00FA               	movwf	_motorFault
   927                           
   928                           ;MainMgr.c: 133:                 break;
   929     004F  289C               	goto	i1l85
   930     0050                     i1l75:	
   931                           ;MainMgr.c: 135:             case 0xF1:
   932                           
   933                           
   934                           ;MainMgr.c: 136:                 RC4 = 0b0;
   935     0050  1283               	bcf	3,5	;RP0=0, select bank0
   936     0051  1303               	bcf	3,6	;RP1=0, select bank0
   937     0052  1207               	bcf	7,4	;volatile
   938     0053                     i1l809:
   939                           
   940                           ;MainMgr.c: 137:                 motorFault = motor_command(0x1);
   941     0053  3001               	movlw	1
   942     0054  120A  118A  20AE  120A  118A  	fcall	_motor_command
   943     0059  00FA               	movwf	_motorFault
   944                           
   945                           ;MainMgr.c: 138:                 break;
   946     005A  289C               	goto	i1l85
   947     005B                     i1l76:	
   948                           ;MainMgr.c: 140:             case 0xF0:
   949                           
   950                           
   951                           ;MainMgr.c: 141:                 RC4 = 0b1;
   952     005B  1283               	bcf	3,5	;RP0=0, select bank0
   953     005C  1303               	bcf	3,6	;RP1=0, select bank0
   954     005D  1607               	bsf	7,4	;volatile
   955     005E                     i1l811:
   956                           
   957                           ;MainMgr.c: 142:                 motorFault = motor_command(0x0);
   958     005E  3000               	movlw	0
   959     005F  120A  118A  20AE  120A  118A  	fcall	_motor_command
   960     0064  00FA               	movwf	_motorFault
   961                           
   962                           ;MainMgr.c: 143:                 break;
   963     0065  289C               	goto	i1l85
   964     0066                     i1l77:	
   965                           ;MainMgr.c: 145:             case 0x9F:
   966                           
   967                           
   968                           ;MainMgr.c: 146:                 RB0 = 0b1;
   969     0066  1283               	bcf	3,5	;RP0=0, select bank0
   970     0067  1303               	bcf	3,6	;RP1=0, select bank0
   971     0068  1406               	bsf	6,0	;volatile
   972                           
   973                           ;MainMgr.c: 147:                 break;
   974     0069  289C               	goto	i1l85
   975     006A                     i1l78:	
   976                           ;MainMgr.c: 149:             case 0x90:
   977                           
   978                           
   979                           ;MainMgr.c: 150:                 RB0 = 0b0;
   980     006A  1283               	bcf	3,5	;RP0=0, select bank0
   981     006B  1303               	bcf	3,6	;RP1=0, select bank0
   982     006C  1006               	bcf	6,0	;volatile
   983                           
   984                           ;MainMgr.c: 151:                 break;
   985     006D  289C               	goto	i1l85
   986     006E                     i1l82:
   987     006E  1283               	bcf	3,5	;RP0=0, select bank0
   988     006F  1303               	bcf	3,6	;RP1=0, select bank0
   989     0070  1E0C               	btfss	12,4	;volatile
   990     0071  2873               	goto	u3_21
   991     0072  2874               	goto	u3_20
   992     0073                     u3_21:
   993     0073  286E               	goto	i1l82
   994     0074                     u3_20:
   995     0074                     i1l813:
   996                           
   997                           ;MainMgr.c: 161:                 TXREG = 0x44;
   998     0074  3044               	movlw	68
   999     0075  0099               	movwf	25	;volatile
  1000                           
  1001                           ;MainMgr.c: 162:                 break;
  1002     0076  289C               	goto	i1l85
  1003     0077                     i1l817:
  1004     0077  0879               	movf	_com_buffer,w
  1005     0078  00F4               	movwf	??_ISR_treatment
  1006     0079  01F5               	clrf	??_ISR_treatment+1
  1007                           
  1008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1009                           ; Switch size 1, requested type "simple"
  1010                           ; Number of cases is 1, Range of values is 0 to 0
  1011                           ; switch strategies available:
  1012                           ; Name         Instructions Cycles
  1013                           ; simple_byte            4     3 (average)
  1014                           ; direct_byte           11     8 (fixed)
  1015                           ; jumptable            260     6 (fixed)
  1016                           ;	Chosen strategy is simple_byte
  1017     007A  0875               	movf	??_ISR_treatment+1,w
  1018     007B  3A00               	xorlw	0	; case 0
  1019     007C  1903               	skipnz
  1020     007D  287F               	goto	i1l959
  1021     007E  286E               	goto	i1l82
  1022     007F                     i1l959:
  1023                           
  1024                           ; Switch size 1, requested type "simple"
  1025                           ; Number of cases is 9, Range of values is 144 to 249
  1026                           ; switch strategies available:
  1027                           ; Name         Instructions Cycles
  1028                           ; simple_byte           28    15 (average)
  1029                           ; jumptable            263     9 (fixed)
  1030                           ;	Chosen strategy is simple_byte
  1031     007F  0874               	movf	??_ISR_treatment,w
  1032     0080  3A90               	xorlw	144	; case 144
  1033     0081  1903               	skipnz
  1034     0082  286A               	goto	i1l78
  1035     0083  3A06               	xorlw	6	; case 150
  1036     0084  1903               	skipnz
  1037     0085  289C               	goto	i1l85
  1038     0086  3A0F               	xorlw	15	; case 153
  1039     0087  1903               	skipnz
  1040     0088  289C               	goto	i1l85
  1041     0089  3A06               	xorlw	6	; case 159
  1042     008A  1903               	skipnz
  1043     008B  2866               	goto	i1l77
  1044     008C  3A6F               	xorlw	111	; case 240
  1045     008D  1903               	skipnz
  1046     008E  285B               	goto	i1l76
  1047     008F  3A01               	xorlw	1	; case 241
  1048     0090  1903               	skipnz
  1049     0091  2850               	goto	i1l75
  1050     0092  3A07               	xorlw	7	; case 246
  1051     0093  1903               	skipnz
  1052     0094  283A               	goto	i1l73
  1053     0095  3A0E               	xorlw	14	; case 248
  1054     0096  1903               	skipnz
  1055     0097  2845               	goto	i1l74
  1056     0098  3A01               	xorlw	1	; case 249
  1057     0099  1903               	skipnz
  1058     009A  282F               	goto	i1l71
  1059     009B  286E               	goto	i1l82
  1060     009C                     i1l85:
  1061     009C  1283               	bcf	3,5	;RP0=0, select bank0
  1062     009D  1303               	bcf	3,6	;RP1=0, select bank0
  1063     009E  1E0C               	btfss	12,4	;volatile
  1064     009F  28A1               	goto	u4_21
  1065     00A0  28A2               	goto	u4_20
  1066     00A1                     u4_21:
  1067     00A1  289C               	goto	i1l85
  1068     00A2                     u4_20:
  1069     00A2                     i1l819:
  1070                           
  1071                           ;MainMgr.c: 165:         TXREG = com_buffer;
  1072     00A2  0879               	movf	_com_buffer,w
  1073     00A3  0099               	movwf	25	;volatile
  1074     00A4                     i1l89:	
  1075                           ;MainMgr.c: 171:         {;MainMgr.c: 173:         }
  1076                           
  1077                           
  1078                           ;MainMgr.c: 174:         RCIF = 0;
  1079     00A4  128C               	bcf	12,5	;volatile
  1080     00A5                     i1l90:
  1081     00A5  0878               	movf	??_ISR_treatment+4,w
  1082     00A6  008A               	movwf	10
  1083     00A7  0877               	movf	??_ISR_treatment+3,w
  1084     00A8  0084               	movwf	4
  1085     00A9  0E76               	swapf	??_ISR_treatment+2,w
  1086     00AA  0083               	movwf	3
  1087     00AB  0EFE               	swapf	btemp,f
  1088     00AC  0E7E               	swapf	btemp,w
  1089     00AD  0009               	retfie
  1090     00AE                     __end_of_ISR_treatment:
  1091                           
  1092                           	psect	intentry
  1093     0004                     __pintentry:	
  1094                           ;incstack = 0
  1095                           ; Regs used in _ISR_treatment: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1096                           
  1097     0004                     interrupt_function:
  1098     007E                     saved_w	set	btemp
  1099     0004  00FE               	movwf	btemp
  1100     0005  0E03               	swapf	3,w
  1101     0006  00F6               	movwf	??_ISR_treatment+2
  1102     0007  0804               	movf	4,w
  1103     0008  00F7               	movwf	??_ISR_treatment+3
  1104     0009  080A               	movf	10,w
  1105     000A  00F8               	movwf	??_ISR_treatment+4
  1106     000B  120A  118A  281C   	ljmp	_ISR_treatment
  1107                           
  1108                           	psect	text5
  1109     00AE                     __ptext5:	
  1110 ;; *************** function _motor_command *****************
  1111 ;; Defined at:
  1112 ;;		line 21 in file "MotorMng.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  command         1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  command         1    2[COMMON] unsigned char 
  1117 ;;  return_value    1    3[COMMON] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      unsigned char 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       0       0       0       0
  1128 ;;      Locals:         2       0       0       0       0
  1129 ;;      Temps:          2       0       0       0       0
  1130 ;;      Totals:         4       0       0       0       0
  1131 ;;Total ram usage:        4 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_ISR_treatment
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140     00AE                     _motor_command:	
  1141                           ;psect for function _motor_command
  1142                           
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _motor_command: [wreg-fsr0h+status,2+status,0]
  1146                           ;motor_command@command stored from wreg
  1147     00AE  00F2               	movwf	motor_command@command
  1148     00AF                     i1l769:
  1149                           
  1150                           ;MotorMng.c: 21: uint8_t motor_command(uint8_t command);MotorMng.c: 22: {;MotorMng.c: 23
      +                          :     uint8_t return_value;;MotorMng.c: 24:     switch(command)
  1151     00AF  28E0               	goto	i1l775
  1152     00B0                     i1l132:	
  1153                           ;MotorMng.c: 25:     {;MotorMng.c: 26:         case 0xF :
  1154                           
  1155                           
  1156                           ;MotorMng.c: 27:             RD1 = 1;
  1157     00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1158     00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1159     00B2  1488               	bsf	8,1	;volatile
  1160                           
  1161                           ;MotorMng.c: 28:             RD0 = 0;
  1162     00B3  1008               	bcf	8,0	;volatile
  1163                           
  1164                           ;MotorMng.c: 29:             RD3 = 1;
  1165     00B4  1588               	bsf	8,3	;volatile
  1166                           
  1167                           ;MotorMng.c: 30:             RD2 = 0;
  1168     00B5  1108               	bcf	8,2	;volatile
  1169                           
  1170                           ;MotorMng.c: 31:             return_value = 1;
  1171     00B6  01F3               	clrf	motor_command@return_value
  1172     00B7  0AF3               	incf	motor_command@return_value,f
  1173                           
  1174                           ;MotorMng.c: 32:         break;
  1175     00B8  28F9               	goto	i1l777
  1176     00B9                     i1l134:	
  1177                           ;MotorMng.c: 34:         case 0x6 :
  1178                           
  1179                           
  1180                           ;MotorMng.c: 35:             RD1 = 0;
  1181     00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1182     00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1183     00BB  1088               	bcf	8,1	;volatile
  1184                           
  1185                           ;MotorMng.c: 36:             RD0 = 1;
  1186     00BC  1408               	bsf	8,0	;volatile
  1187                           
  1188                           ;MotorMng.c: 37:             RD3 = 0;
  1189     00BD  1188               	bcf	8,3	;volatile
  1190                           
  1191                           ;MotorMng.c: 38:             RD2 = 1;
  1192     00BE  1508               	bsf	8,2	;volatile
  1193                           
  1194                           ;MotorMng.c: 39:             return_value = 1;
  1195     00BF  01F3               	clrf	motor_command@return_value
  1196     00C0  0AF3               	incf	motor_command@return_value,f
  1197                           
  1198                           ;MotorMng.c: 40:         break;
  1199     00C1  28F9               	goto	i1l777
  1200     00C2                     i1l135:	
  1201                           ;MotorMng.c: 42:         case 0x8 :
  1202                           
  1203                           
  1204                           ;MotorMng.c: 43:             RD1 = 0;
  1205     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1206     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1207     00C4  1088               	bcf	8,1	;volatile
  1208                           
  1209                           ;MotorMng.c: 44:             RD0 = 1;
  1210     00C5  1408               	bsf	8,0	;volatile
  1211                           
  1212                           ;MotorMng.c: 45:             RD3 = 1;
  1213     00C6  1588               	bsf	8,3	;volatile
  1214                           
  1215                           ;MotorMng.c: 46:             RD2 = 0;
  1216     00C7  1108               	bcf	8,2	;volatile
  1217                           
  1218                           ;MotorMng.c: 47:             return_value = 1;
  1219     00C8  01F3               	clrf	motor_command@return_value
  1220     00C9  0AF3               	incf	motor_command@return_value,f
  1221                           
  1222                           ;MotorMng.c: 48:         break;
  1223     00CA  28F9               	goto	i1l777
  1224     00CB                     i1l136:	
  1225                           ;MotorMng.c: 50:         case 0x1 :
  1226                           
  1227                           
  1228                           ;MotorMng.c: 51:             RD1 = 1;
  1229     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1230     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1231     00CD  1488               	bsf	8,1	;volatile
  1232                           
  1233                           ;MotorMng.c: 52:             RD0 = 0;
  1234     00CE  1008               	bcf	8,0	;volatile
  1235                           
  1236                           ;MotorMng.c: 53:             RD3 = 0;
  1237     00CF  1188               	bcf	8,3	;volatile
  1238                           
  1239                           ;MotorMng.c: 54:             RD2 = 1;
  1240     00D0  1508               	bsf	8,2	;volatile
  1241                           
  1242                           ;MotorMng.c: 55:             return_value = 1;
  1243     00D1  01F3               	clrf	motor_command@return_value
  1244     00D2  0AF3               	incf	motor_command@return_value,f
  1245                           
  1246                           ;MotorMng.c: 56:         break;
  1247     00D3  28F9               	goto	i1l777
  1248     00D4                     i1l137:	
  1249                           ;MotorMng.c: 58:         case 0x0:
  1250                           
  1251                           
  1252                           ;MotorMng.c: 59:             RD1 = 0;
  1253     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1254     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1255     00D6  1088               	bcf	8,1	;volatile
  1256                           
  1257                           ;MotorMng.c: 60:             RD0 = 0;
  1258     00D7  1008               	bcf	8,0	;volatile
  1259                           
  1260                           ;MotorMng.c: 61:             RD3 = 0;
  1261     00D8  1188               	bcf	8,3	;volatile
  1262                           
  1263                           ;MotorMng.c: 62:             RD2 = 0;
  1264     00D9  1108               	bcf	8,2	;volatile
  1265                           
  1266                           ;MotorMng.c: 63:             return_value = 1;
  1267     00DA  01F3               	clrf	motor_command@return_value
  1268     00DB  0AF3               	incf	motor_command@return_value,f
  1269                           
  1270                           ;MotorMng.c: 64:         break;
  1271     00DC  28F9               	goto	i1l777
  1272     00DD                     i1l771:
  1273                           
  1274                           ;MotorMng.c: 67:             return_value = 0xAA;
  1275     00DD  30AA               	movlw	170
  1276     00DE  00F3               	movwf	motor_command@return_value
  1277                           
  1278                           ;MotorMng.c: 68:         break;
  1279     00DF  28F9               	goto	i1l777
  1280     00E0                     i1l775:
  1281     00E0  0872               	movf	motor_command@command,w
  1282     00E1  00F0               	movwf	??_motor_command
  1283     00E2  01F1               	clrf	??_motor_command+1
  1284                           
  1285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1286                           ; Switch size 1, requested type "simple"
  1287                           ; Number of cases is 1, Range of values is 0 to 0
  1288                           ; switch strategies available:
  1289                           ; Name         Instructions Cycles
  1290                           ; simple_byte            4     3 (average)
  1291                           ; direct_byte           11     8 (fixed)
  1292                           ; jumptable            260     6 (fixed)
  1293                           ;	Chosen strategy is simple_byte
  1294     00E3  0871               	movf	??_motor_command+1,w
  1295     00E4  3A00               	xorlw	0	; case 0
  1296     00E5  1903               	skipnz
  1297     00E6  28E8               	goto	i1l961
  1298     00E7  28DD               	goto	i1l771
  1299     00E8                     i1l961:
  1300                           
  1301                           ; Switch size 1, requested type "simple"
  1302                           ; Number of cases is 5, Range of values is 0 to 15
  1303                           ; switch strategies available:
  1304                           ; Name         Instructions Cycles
  1305                           ; simple_byte           16     9 (average)
  1306                           ; direct_byte           56     8 (fixed)
  1307                           ; jumptable            260     6 (fixed)
  1308                           ;	Chosen strategy is simple_byte
  1309     00E8  0870               	movf	??_motor_command,w
  1310     00E9  3A00               	xorlw	0	; case 0
  1311     00EA  1903               	skipnz
  1312     00EB  28D4               	goto	i1l137
  1313     00EC  3A01               	xorlw	1	; case 1
  1314     00ED  1903               	skipnz
  1315     00EE  28CB               	goto	i1l136
  1316     00EF  3A07               	xorlw	7	; case 6
  1317     00F0  1903               	skipnz
  1318     00F1  28B9               	goto	i1l134
  1319     00F2  3A0E               	xorlw	14	; case 8
  1320     00F3  1903               	skipnz
  1321     00F4  28C2               	goto	i1l135
  1322     00F5  3A07               	xorlw	7	; case 15
  1323     00F6  1903               	skipnz
  1324     00F7  28B0               	goto	i1l132
  1325     00F8  28DD               	goto	i1l771
  1326     00F9                     i1l777:
  1327                           
  1328                           ;MotorMng.c: 70:     return return_value;
  1329     00F9  0873               	movf	motor_command@return_value,w
  1330     00FA                     i1l139:
  1331     00FA  0008               	return
  1332     00FB                     __end_of_motor_command:
  1333     007E                     btemp	set	126	;btemp
  1334     007E                     wtemp0	set	126
  1335                           
  1336                           	psect	idloc
  1337                           
  1338                           ;Config register IDLOC0 @ 0x2000
  1339                           ;	unspecified, using default values
  1340     2000                     	org	8192
  1341     2000  3FFF               	dw	16383
  1342                           
  1343                           ;Config register IDLOC1 @ 0x2001
  1344                           ;	unspecified, using default values
  1345     2001                     	org	8193
  1346     2001  3FFF               	dw	16383
  1347                           
  1348                           ;Config register IDLOC2 @ 0x2002
  1349                           ;	unspecified, using default values
  1350     2002                     	org	8194
  1351     2002  3FFF               	dw	16383
  1352                           
  1353                           ;Config register IDLOC3 @ 0x2003
  1354                           ;	unspecified, using default values
  1355     2003                     	org	8195
  1356     2003  3FFF               	dw	16383
  1357                           
  1358                           	psect	config
  1359                           
  1360                           ;Config register CONFIG1 @ 0x2007
  1361                           ;	Oscillator Selection bits
  1362                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1363                           ;	Watchdog Timer Enable bit
  1364                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1365                           ;	Power-up Timer Enable bit
  1366                           ;	PWRTE = OFF, PWRT disabled
  1367                           ;	RE3/MCLR pin function select bit
  1368                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1369                           ;	Code Protection bit
  1370                           ;	CP = OFF, Program memory code protection is disabled
  1371                           ;	Data Code Protection bit
  1372                           ;	CPD = OFF, Data memory code protection is disabled
  1373                           ;	Brown Out Reset Selection bits
  1374                           ;	BOREN = ON, BOR enabled
  1375                           ;	Internal External Switchover bit
  1376                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1377                           ;	Fail-Safe Clock Monitor Enabled bit
  1378                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1379                           ;	Low Voltage Programming Enable bit
  1380                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1381                           ;	In-Circuit Debugger Mode bit
  1382                           ;	DEBUG = 0x1, unprogrammed default
  1383     2007                     	org	8199
  1384     2007  2FF5               	dw	12277
  1385                           
  1386                           ;Config register CONFIG2 @ 0x2008
  1387                           ;	Brown-out Reset Selection bit
  1388                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1389                           ;	Flash Program Memory Self Write Enable bits
  1390                           ;	WRT = OFF, Write protection off
  1391     2008                     	org	8200
  1392     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_treatment in COMMON

    _ISR_treatment->_motor_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_treatment in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_treatment in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_treatment in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_treatment in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
                          _UART_init
                         _motor_init
                       _project_init
 ---------------------------------------------------------------------------------
 (1) _project_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_treatment                                        5     5      0      30
                                              4 COMMON     5     5      0
                      _motor_command
 ---------------------------------------------------------------------------------
 (3) _motor_command                                        4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _motor_init
   _project_init

 _ISR_treatment (ROOT)
   _motor_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2       2       5        2.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 19 12:37:37 2022

                       l55 0115                         l64 013A                         l58 011F  
                       l59 011F                         u50 011B                         u51 011A  
                       u67 0106                        l117 0152                        l128 0159  
                      l901 014B                        l903 014E                        l911 0110  
                      l905 014F                        l913 011B                        l915 011D  
                      l907 00FB                        l917 011E                        l909 0100  
                      l871 0128                        l881 0153                        l873 0129  
                      l891 0144                        l883 013B                        l875 012B  
                      l893 0147                        l885 013E                        l877 0131  
                      l869 0123                        l895 0148                        l887 0140  
                      l879 0133                        l897 0149                        l889 0141  
                      l899 014A                        _GIE 005F                        _RB0 0030  
                      _RD0 0040                        _RD1 0041                        _RC4 003C  
                      _RD2 0042                        _RD3 0043                        _RX9 00C6  
                      _TX9 04C6                        fsr0 0004                       _BRGH 04C2  
                     _CREN 00C4                       _PEIE 005E                       _RCIE 0465  
                     _RCIF 0065                       i1l71 002F                       i1l73 003A  
                     i1l82 006E                       i1l74 0045                       i1l90 00A5  
                     i1l75 0050                       i1l76 005B                       i1l77 0066  
                     i1l85 009C                       i1l78 006A                       i1l89 00A4  
                     _SPEN 00C7                       _TXIE 0464                       _TXEN 04C5  
                     _TXIF 0064                       _SYNC 04C4                       u2_20 0022  
                     u2_21 0021                       u3_20 0074                       u3_21 0073  
                     u4_20 00A2                       u4_21 00A1                       u7_27 0029  
                     _main 00FB                       btemp 007E                       start 000E  
                    ?_main 0070                      _ANSEL 0188                      _IRCF0 047C  
                    _IRCF1 047D                      _IRCF2 047E                      i1l132 00B0  
                    i1l134 00B9                      i1l135 00C2                      i1l136 00CB  
                    i1l137 00D4                      i1l139 00FA                      i1l801 0024  
                    i1l811 005E                      i1l803 0032                      i1l813 0074  
                    i1l805 003D                      i1l807 0048                      i1l809 0053  
                    i1l817 0077                      i1l771 00DD                      i1l819 00A2  
                    i1l775 00E0                      i1l961 00E8                      i1l777 00F9  
                    i1l769 00AF                      i1l797 001C                      i1l959 007F  
                    i1l799 0022                      _RCREG 001A                      _SPBRG 0099  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TXREG 0019                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 0011  
             __end_of_main 0123                     ??_main 0020                     _ADCON0 001F  
                   _ADCON1 009F                     _ANSELH 0189          __end_of_UART_init 0153  
             __pdataCOMMON 007A                     saved_w 007E    __end_of__initialization 0018  
           __pcstackCOMMON 0070      __end_of_ISR_treatment 00AE                 __pmaintext 00FB  
    __end_of_motor_command 00FB                 __pintentry 0004                 _com_buffer 0079  
                  __ptext1 0123                    __ptext2 0153                    __ptext3 013B  
                  __ptext4 001C                    __ptext5 00AE       end_of_initialization 0018  
               _motorFault 007A                 _motor_init 0153                  _UART_init 013B  
            ?_project_init 0070              __pidataCOMMON 015A                 ?_UART_init 0070  
      start_initialization 0011             ??_project_init 0020                ?_motor_init 0070  
              __pbssCOMMON 0079                  ___latbits 0002              __pcstackBANK0 0020  
              ??_UART_init 0020          interrupt_function 0004       __end_of_project_init 013B  
            _ISR_treatment 001C  motor_command@return_value 0073              _motor_command 00AE  
           ?_ISR_treatment 0070       motor_command@command 0072             ?_motor_command 0070  
             ??_motor_init 0020                   intlevel1 0000         __end_of_motor_init 015A  
          ??_ISR_treatment 0074               _project_init 0123            ??_motor_command 0070  
