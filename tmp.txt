void __interrupt() ISR_treatment (void)
{
    if(RCIF == 1)
    {
        com_buffer = RCREG;
        RC4 = 1;
        __delay_ms(1000);
        switch(com_buffer){
            case 0xF9: /* MOTOR_COMMAND GO FORWARD */
                BACKLIGHTS = OFF;
                motorFault = motor_command(GO_FORWARD);
                break;
            
            case 0xF6: /* MOTOR_COMMAND GO_BACKWARD */
                BACKLIGHTS = OFF;
                motorFault = motor_command(GO_BACKWARD);
                break;
                
            case 0xF8: /* MOTOR_COMMAND GO_LEFT */
                BACKLIGHTS = OFF;
                motorFault = motor_command(GO_LEFT);
                break;
                    
            case 0xF1: /* MOTOR_COMMAND GO_RIGHT */
                BACKLIGHTS = OFF;
                motorFault = motor_command(GO_RIGHT);
                break;
               
            case 0xF0: /* MOTOR_COMMAND GO_STANDBY */
                BACKLIGHTS = ON;
                motorFault = motor_command(GO_STANDBY);
                break;
                
            case 0x9F: /* SYSTEM_COMMAND OPEN_HEADLIGHTS */
                HEADLIGHTS = ON;
                break;
                
            case 0x90: /* SYSTEM_COMMAND CLOSE HEADLIGHTS */
                HEADLIGHTS = OFF;
                break;
               
            case 0x99: /* SYSTEM COMMAND ACTIVATE_DISTRONIC */
                break;
                
            case 0x96: /* SYSTEM_COMMAND DEACTIVATE_DISTRONIC */
                break;
                
            default: /* TODO : error func */
                while(TXIF==0);
                TXREG = 0x44;
                break;
        }
        while(TXIF==0);
        TXREG = com_buffer;
        if ( motorFault != COMMAND_UNKNOWN )
        {
            /* TODO : Send command ok */
        }
        else
        {
            /* TODO : Send motor fault */
        }
        RCIF = 0; /* Clearing interrupt flag */
    }
}